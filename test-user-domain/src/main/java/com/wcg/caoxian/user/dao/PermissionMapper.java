package com.wcg.caoxian.user.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.wcg.caoxian.sdk.bean.PageBean;
import com.wcg.caoxian.user.model.Permission;
import com.wcg.caoxian.user.vo.PermissionSearchOutParamVo;
import com.wcg.caoxian.user.vo.PermissionReAndUpVo;

public interface PermissionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ur_permission
     *
     * @mbg.generated Fri Sep 22 13:40:32 CST 2017
     */
    int deleteByPrimaryKey(String code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ur_permission
     *
     * @mbg.generated Fri Sep 22 13:40:32 CST 2017
     */
    int insert(Permission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ur_permission
     *
     * @mbg.generated Fri Sep 22 13:40:32 CST 2017
     */
    int insertSelective(Permission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ur_permission
     *
     * @mbg.generated Fri Sep 22 13:40:32 CST 2017
     */
    Permission selectByPrimaryKey(String code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ur_permission
     *
     * @mbg.generated Fri Sep 22 13:40:32 CST 2017
     */
    int updateByPrimaryKeySelective(Permission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ur_permission
     *
     * @mbg.generated Fri Sep 22 13:40:32 CST 2017
     */
    int updateByPrimaryKey(Permission record);

    /**
     * @Title: isDup
     * @Description: 校验名称是否已存在
     * @author 李洋  liyang
     * @data 2017年9月29日 下午2:03:18
     * @return int
     */
	int isDup(@Param("permissionVo")PermissionReAndUpVo permissionVo);
	
	/**
	 * @Title: isEnNameDup
	 * @Description: 校验英文名称是否已存在
	 * @author 李洋  liyang
	 * @data 2017年10月19日 下午2:15:10
	 * @return int
	 */
	int isEnNameDup(@Param("permissionVo")PermissionReAndUpVo permissionVo);

	/**
	 * @Title: searchByCondition
	 * @Description: USER0130-权限菜单列表查询
	 * @author 李洋  liyang
	 * @data 2017年9月29日 下午2:57:20
	 * @return List<PermissionSearchOutParamVo>
	 */
	List<PermissionSearchOutParamVo> searchByCondition(@Param("name")String name, @Param("pageBean")PageBean pageBean);

	/**
	 * @Title: searchCount
	 * @Description: USER0130-权限菜单列表查询记录数
	 * @author 李洋  liyang
	 * @data 2017年9月29日 下午5:22:28
	 * @return long
	 */
	long searchCount(@Param("name")String name);

	/**
	 * @Title: deleteByCode
	 * @Description: USER0150-权限菜单删除
	 * @author 李洋  liyang
	 * @data 2017年10月10日 下午2:32:37
	 * @return int
	 */
	int deleteByCode(String code);

	/**
	 * @Title: serachByUserCd
	 * @Description: USER0070-根据用户编码获取该用户菜单权限
	 * @author 李洋  liyang
	 * @data 2017年10月12日 下午1:38:09
	 * @return List<PermissionSearchOutParamVo>
	 */
	List<PermissionSearchOutParamVo> serachByUserCd(@Param("userCd")String userCd);

}